//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-548 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.20 at 12:00:33 PM CST 
//


package com.mastercard.api.repower.v1.repower.domain.factory;

import com.mastercard.api.repower.v1.repower.domain.Repower;
import com.mastercard.api.repower.v1.repower.domain.RepowerRequest;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RepowerRequest.CardAcceptor }
     * 
     */
    public RepowerRequest.CardAcceptor createRepowerRequestCardAcceptor() {
        return new RepowerRequest.CardAcceptor();
    }

    /**
     * Create an instance of {@link RepowerRequest.TransactionAmount }
     * 
     */
    public RepowerRequest.TransactionAmount createRepowerRequestTransactionAmount() {
        return new RepowerRequest.TransactionAmount();
    }

    /**
     * Create an instance of {@link RepowerRequest }
     * 
     */
    public RepowerRequest createRepowerRequest() {
        RepowerRequest request = new RepowerRequest();
        request.setCardAcceptor(createRepowerRequestCardAcceptor());
        request.setTransactionAmount(createRepowerRequestTransactionAmount());
        return request;
    }

    /**
     * Create an instance of {@link Repower.AccountBalance }
     *
     */
    public Repower.AccountBalance createRepowerAccountBalance() {
        return new Repower.AccountBalance();
    }

    /**
     * Create an instance of {@link Repower.TransactionHistory.Transaction }
     *
     */
    public Repower.TransactionHistory.Transaction createRepowerTransactionHistoryTransaction() {
        Repower.TransactionHistory.Transaction transaction = new Repower.TransactionHistory.Transaction();
        transaction.setResponse(createRepowerTransactionHistoryTransactionResponse());
        return transaction;
    }

    /**
     * Create an instance of {@link Repower }
     *
     */
    public Repower createRepower() {
        Repower repower = new Repower();
        repower.setAccountBalance(createRepowerAccountBalance());
        repower.setTransactionHistory(createRepowerTransactionHistory());
        return repower;
    }

    /**
     * Create an instance of {@link Repower.TransactionHistory.Transaction.Response }
     *
     */
    public Repower.TransactionHistory.Transaction.Response createRepowerTransactionHistoryTransactionResponse() {
        return new Repower.TransactionHistory.Transaction.Response();
    }

    /**
     * Create an instance of {@link Repower.TransactionHistory }
     *
     */
    public Repower.TransactionHistory createRepowerTransactionHistory() {
        Repower.TransactionHistory th = new Repower.TransactionHistory();
        th.setTransaction(createRepowerTransactionHistoryTransaction());
        return th;
    }

}
